name: Node.js CI

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test --watchAll=false

      - name: Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./build/
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

      - name: Build Image
        run: docker build -t image .
        # - name: Annotate
        #   uses: Attest/annotations-action@v0.1.0
        #   with:
        #     title: "Annotate Files"
        #     input: "./annotations.json"
        #     token: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag Image
        run: |
          # Extract Image name from "name" of package.json
          IMAGE_NAME=$(jq -r '.name' package.json)
          echo IMAGE_NAME=$IMAGE_NAME
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
        env:
          CI: true

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: hub.docker.com
          repository: yisen614/react-project:v1
          tag_with_ref: true
